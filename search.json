[
  {
    "objectID": "articles/styles.html",
    "href": "articles/styles.html",
    "title": "Styles",
    "section": "",
    "text": "To replace acronyms in your document, acronyms offers several styles, which are quite similar to the abbreviations styles in the LaTeX package glossaries.\nThis vignette lists the available styles, and shows how they render.\nStyles might make a difference between the first use and next uses of an acronym. In the following list, the two variations are shown for each style.\nFor each of the style examples, we will use the following document (metadata and body):"
  },
  {
    "objectID": "articles/styles.html#long-short",
    "href": "articles/styles.html#long-short",
    "title": "Styles",
    "section": "long-short",
    "text": "long-short\nFirst use: Quarto document (qmd)\nNext uses: qmd"
  },
  {
    "objectID": "articles/styles.html#short-long",
    "href": "articles/styles.html#short-long",
    "title": "Styles",
    "section": "short-long",
    "text": "short-long\nFirst use: qmd (Quarto document)\nNext uses: qmd"
  },
  {
    "objectID": "articles/styles.html#long-long",
    "href": "articles/styles.html#long-long",
    "title": "Styles",
    "section": "long-long",
    "text": "long-long\nFirst use: Quarto document\nNext uses: Quarto document"
  },
  {
    "objectID": "articles/styles.html#short-footnote",
    "href": "articles/styles.html#short-footnote",
    "title": "Styles",
    "section": "short-footnote",
    "text": "short-footnote\nFirst use: qmd1\nNext uses: qmd"
  },
  {
    "objectID": "articles/options.html",
    "href": "articles/options.html",
    "title": "Available options",
    "section": "",
    "text": "acronyms supports various options to change its behaviour. This vignette lists them, what they do, and their allowed values.\nOptions should be set in the YAML metadata, inside the acronyms field."
  },
  {
    "objectID": "articles/options.html#overview",
    "href": "articles/options.html#overview",
    "title": "Available options",
    "section": "Overview",
    "text": "Overview\nThe following example gives an overview of available options, along with their default values.\n---\nacronyms:\n  loa_title: \"List of Acronyms\"\n  include_unused: true\n  insert_loa: \"beginning\"\n  insert_links: true\n  id_prefix: \"acronyms_\"\n  sorting: \"alphabetical\"\n  non_existing: \"key\"\n  style: \"long-short\"\n  fromfile:\n    - ./acronyms.yml\n---"
  },
  {
    "objectID": "articles/options.html#loa_title",
    "href": "articles/options.html#loa_title",
    "title": "Available options",
    "section": "loa_title",
    "text": "loa_title\nacronyms can generate a List Of Acronyms (LoA) automatically and insert it into your document. This option controls the title (header) that precedes this list. By default, it is set to List of Acronyms.\nYou may override it to change this title.\nAnother available behaviour is to disable the creation of this header, by setting the value to \"\" (the empty string). This is particularly useful if you want to control exactly where and how to insert the List Of Acronyms. In this case, the List Of Acronyms will still be generated and inserted, but without its preceding header.\nExamples:\nTo set the title to “Glossary”:\n---\nacronyms:\n  loa_title: \"Glossary\"\n---\nTo disable the title:\n---\nacronyms:\n  loa_title: \"\"\n---"
  },
  {
    "objectID": "articles/options.html#include_unused",
    "href": "articles/options.html#include_unused",
    "title": "Available options",
    "section": "include_unused",
    "text": "include_unused\nThis option controls whether unused acronyms should be included in the generated List Of Acronyms.\nAn “unused acronym” is an acronym that has been defined in the YAML metadata, but which key does not appear in an \\acr{key} inside the document body.\nThis option accepts only boolean values: either true (the default), or false.\nIt is particularly useful if you want to define all possible acronyms (e.g., the same for all your documents), but you actually use only some of them and do not want to clutter the List Of Acronyms.\nExamples:\nTo remove unused acronyms from the List Of Acronyms:\n---\nacronyms:\n  include_unused: false\n---"
  },
  {
    "objectID": "articles/options.html#insert_loa",
    "href": "articles/options.html#insert_loa",
    "title": "Available options",
    "section": "insert_loa",
    "text": "insert_loa\nBy default, acronyms generates a List Of Acronyms and automatically includes it for you at the beginning of the document, i.e., as the first block.\nDepending on your desired document structure, that behaviour might not be wanted. This option allows you to insert it automatically at the end, or even to not insert it automatically.\nIf you still want to make acronyms automatically generate a List Of Acronyms, but to insert it somewhere else (e.g., after a preface), you can use this option in conjunction with the \\printacronyms command.\nThis command, which must be used inside the document’s body, will be replaced by acronyms with the List Of Acronyms.\nNote: due to the way Pandoc Lua Filters work, \\printacronyms needs to be used exactly as-is, inside its own paragraph, with nothing else in the paragraph. Otherwise, it will not be recognized.\nExamples:\nTo insert it automatically at the beginning: (the default)\n---\nacronyms:\n  insert_loa: \"beginning\"\n---\nTo insert it automatically at the end:\n---\nacronyms:\n  insert_loa: \"end\"\n---\nTo disable the automatic insertion of the List Of Acronyms:\n---\nacronyms:\n  insert_loa: false\n---\nNote: if you disable the automatic insertion, you must either:\n\nInsert the LoA manually somewhere in your document by using \\printacronyms.\n\nSome text for demonstration...\n\n\\printacronyms\n\nAnd some text after. Note that nothing else is in the same\nparagraph as `\\printacronyms`.\n\nDisable the insertion of links using the insert_links option.\n\n---\nacronyms:\n  insert_loa: false\n  insert_links: false\n---\nOtherwise, acronyms will try to link the acronyms with their definition in the List Of Acronyms… which does not exist!"
  },
  {
    "objectID": "articles/options.html#insert_links",
    "href": "articles/options.html#insert_links",
    "title": "Available options",
    "section": "insert_links",
    "text": "insert_links\nAcronyms can be linked to their definition in the List Of Acronyms in order to make navigation easier for your readers.\nThis option controls whether to automatically insert these links: it accepts only boolean values (by default, true).\nExamples: To disable this behaviour (acronyms are inserted as plain texts):\n---\nacronyms:\n  insert_links: false\n---"
  },
  {
    "objectID": "articles/options.html#id_prefix",
    "href": "articles/options.html#id_prefix",
    "title": "Available options",
    "section": "id_prefix",
    "text": "id_prefix\nWhen acronyms are linked to their definition (see insert_links), they use an unique ID to do so. To ensure that IDs stay unique, they are composed of a common prefix and the acronym’s key.\nThis option controls the prefix that is used, by default set to \"acronyms_\".\nThis means that, for example, an acronym which key is YAML will use the following ID: acronyms_YAML.\nAdditionally, the List Of Acronyms’ title (if inserted, refer to the loa_title option for more details) will have its own ID as well, which is composed of the same prefix followed by \"HEADER_LOA\", for example: acronyms_HEADER_LOA.\nIf you find that, for some reason, one of the IDs conflict with another ID in your document, you can use this option to change the prefix.\nNote: Since this option is used to create IDs, it should not contain any special character (emoji, punctuation, …).\nExamples:\nTo set the prefix to “my_acronyms_”:\n---\nacronyms:\n  id_prefix: \"my_acronyms_\"\n---"
  },
  {
    "objectID": "articles/options.html#sorting",
    "href": "articles/options.html#sorting",
    "title": "Available options",
    "section": "sorting",
    "text": "sorting\nThis option controls the sorting criterion that will be used to automatically sort the List Of Acronyms when it is generated, i.e., the order in which the acronyms are displayed in this list.\nSeveral values are available:\n\nalphabetical (default): Acronyms are sorted by their short name, in an alphabetical order. That means that, for example, an acronym “Rmd” is sorted before “YAML” (as R < Y).\ninitial: Acronyms are displayed in the exact same order they defined in your YAML metadata. This is somewhat equivalent to not sorting the list.\nusage: Acronyms are sorted in the order in which they appear (i.e., are first used) in the document body. For example, \\acr{YAML} \\acr{Rmd} means that “YAML” appears before “Rmd”. Warning: when this sorting is used, the include_unused option must be set to false. Otherwise, acronyms will raise an error, since it cannot sort acronyms which are never used.\n\nExamples:\nTo sort by order of appearance in the document:\n---\nacronyms:\n  sorting: usage\n  include_unused: false\n---\nTo sort by order of definition in the YAML metadata:\n---\nacronyms:\n  sorting: initial\n---"
  },
  {
    "objectID": "articles/options.html#non_existing",
    "href": "articles/options.html#non_existing",
    "title": "Available options",
    "section": "non_existing",
    "text": "non_existing\nThis option controls what to dot when acronyms finds an acronym that doesn’t exist, i.e., which key was not defined.\nThe default behaviour is to log a warning and to replace by the used key, so that the document may still be readable.\nFor example, assuming that the “Rmd” key was never defined in the YAML metadata, the line:\n\\acr{Rmd} can be used to write technical documents.\nis rendered as: > Rmd can be used to write technical documents.\nThe following warning is also printed to the standard error (stderr):\n\n[WARNING][acronyms] Acronym key Rmd not recognized\n\nAvailable values are:\n\nkey: The default behaviour, logs a warning and replaces the command by the used key itself.\n??: Logs a warning and replaces the command by “??”. This behaviour is similar to what Biblatex achieves for LaTeX when an unknown citation key is found.\nerror: Stops the parsing by raising an error.\n\nExamples:\nTo visually identify where non-existing acronyms are used:\n---\nacronyms:\n  non_existing: \"??\"\n---\nIn this case, the previous example would be rendered as:\n\n?? can be used to write technical documents.\n\nTo stop the parsing and absolutely avoid using non-existing acronyms:\n---\nacronyms:\n  non_existing: error\n---"
  },
  {
    "objectID": "articles/options.html#on_duplicate",
    "href": "articles/options.html#on_duplicate",
    "title": "Available options",
    "section": "on_duplicate",
    "text": "on_duplicate\nThis option controls what to do when two (or more) acronyms are defined with the same key.\nBy default, acronyms prints a warning to the standard error (stderr), and keeps the old acronym in its database (the new acronym is thus dropped).\nSeveral values are available:\n\nwarn (default)\nreplace: No warning is issued, and the old acronym is replaced by the new one.\nkeep: No warning is issued, and the old acronym is kept.\nerror: Raises a descriptive error, and stops the parsing.\n\nExamples:\nIn the following examples, we consider the following acronyms definitions in the YAML metadata:\n---\nacronyms:\n  keys:\n    - shortname: Rmd\n      longname: 1st definition\n    - shortname: Rmd\n      longname: 2nd definition\n---\nTo always replace duplicates:\n---\nacronyms:\n  on_duplicate: replace\n---\n\\acr{Rmd} would be rendered as 2nd definition (Rmd)\nTo always keep duplicates without warning:\n---\nacronyms:\n  on_duplicate: keep\n---\n\\acr{Rmd} would be rendered as 1st definition (Rmd)\nTo always avoid duplicates by raising an error:\n---\nacronyms:\n  on_duplicate: error\n---"
  },
  {
    "objectID": "articles/options.html#fromfile",
    "href": "articles/options.html#fromfile",
    "title": "Available options",
    "section": "fromfile",
    "text": "fromfile\nBy default, acronyms expect to find acronyms definitions inside the YAML metadata~; however, you can use fromfile to specify external YAML files from which acronyms should be loaded.\nIts usage is described in details in Advanced usage."
  },
  {
    "objectID": "articles/options.html#style",
    "href": "articles/options.html#style",
    "title": "Available options",
    "section": "style",
    "text": "style\nacronyms supports several styles to replace acronyms, similarly to how the LaTeX package glossaries work for abbreviations.\nStyles define how to render an acronym in the document body: which fields to use, in which order, with emphasis or not, with a different style whether this is the acronym’s first use or not, etc.\nThe list of available styles, along with a visualization of each of them, is displayed in styles."
  },
  {
    "objectID": "articles/advanced_usage.html",
    "href": "articles/advanced_usage.html",
    "title": "Advanced usage",
    "section": "",
    "text": "Whereas defining acronyms directly in the YAML metadata is the most straightforward way, acronyms also support reading definitions from one (or several) pseudo-YAML file.\nTo do so, simply specify the file path in the fromfile attribute of the YAML metadata. This behaviour is particularly useful if you want to define acronyms in the same file for multiple projects, or generate it automatically, in a similar way to the .bib files for LaTeX citations.\nThis attribute may be either a single path, for example:\n---\nacronyms:\n  fromfile: ./acronyms.yml\n---\nor a list of paths, for example:\n---\nacronyms:\n  fromfile:\n    - ./acronyms1.yml\n    - ./acronyms2.yml\n---\nNote that the path may be either absolute or relative. If the path is relative, it is resolved with respect to the current working directory of Pandoc. By default, when using Quarto, this working directory is set to the directory containing the source qmd file.\nIn our examples, we thus assume that the acronyms.yml (respectively, acronyms1.yml and acronyms2.yml) live in the same folder as the qmd document.\nThe content of such files must be as following:\n---\nacronyms:\n  keys:\n  # Define your keys here\n    - shortname: qmd\n      longname: Quarto document\n---\nPlease note that this format is not really YAML; instead, the files are read as Quarto documents themselves, hence the presence of the --- fences.\nHowever, only the metadata and more specifically the acronyms.keys field is used. No other option is taken into account. The eventual document body is ignored as well.\nThe acronyms are read in the following order:\n\nAcronyms in the acronyms.key field of the source qmd document, in sequential order.\nAcronyms in each of the acronyms.fromfile files.\n\n\nFiles are read in sequential order.\nAcronyms inside each file are also read in sequential order.\n\nThis order is meaningful in 2 cases:\n\nWhen a duplicate key is found, the behaviour (keep or replace) depends on the order in which acronyms are read.\nWhen the initial sorting is used, the List Of Acronyms displays acronyms in the same order as they were defined."
  },
  {
    "objectID": "getting_started.html",
    "href": "getting_started.html",
    "title": "Introduction to acronyms",
    "section": "",
    "text": "The goal of acronyms is to provide support for acronyms to Quarto documents, in a similar way to what glossaries achieve for LaTeX.\nBasically, it allows you to define a list of acronyms, and to automatically replace acronyms inside the document. A list of all defined acronyms along with their definitions is also generated and inserted.\nUsing acronyms can be done in 3 simple steps:"
  },
  {
    "objectID": "getting_started.html#installing-the-extension",
    "href": "getting_started.html#installing-the-extension",
    "title": "Introduction to acronyms",
    "section": "Installing the extension",
    "text": "Installing the extension\nThis extension can be installed through the standard Quarto add command:\nquarto add rchaput/acronyms\nThis command will download the latest version and install it locally to your _extensions folder. Please see the official Quarto documentation for details.\nMake sure that your Quarto document(s) contain the following lines in the YAML metadata, to load the acronyms extension:\n---\nfilters:\n  - acronyms\n---"
  },
  {
    "objectID": "getting_started.html#defining-acronyms",
    "href": "getting_started.html#defining-acronyms",
    "title": "Introduction to acronyms",
    "section": "Defining acronyms",
    "text": "Defining acronyms\nPrior to using acronyms in the Quarto document, they must be defined in the YAML metadata.\nAn acronym is defined as:\n\na key, which is used to refer to the acronym throughout the document;\na short name, which is usually the acronym itself;\na long name, which is usually what the acronym stands for.\n\nTo make the list less verbose, if the key is not provided, acronyms uses the short name as a default key for the acronym.\nThe following example defines 2 acronyms:\n---\nacronyms:\n  keys:\n    - shortname: qmd\n      longname: Quarto documents\n    - key: yaml\n      shortname: YAML\n      longname: YAML Ain't Markup Language\n---"
  },
  {
    "objectID": "getting_started.html#using-acronyms",
    "href": "getting_started.html#using-acronyms",
    "title": "Introduction to acronyms",
    "section": "Using acronyms",
    "text": "Using acronyms\nFinally, to insert an acronym into the document, simply use \\acr{<KEY>}, where <KEY> is an acronym’s key, as defined in the YAML metadata.\nThis command will be automatically replaced by acronyms. The result depends on the chosen style (see styles for more details). Most styles will also make a difference between the first use, and the next occurrences.\nBy default, acronymsdown will replace as follows:\n\nfirst use: <long name> (<short name>)\nnext uses: <short name>\n\nThe next lines show an example of how acronymsdown replaces acronyms in a document, assuming the acronyms Rmd and yaml have been defined, as per the previous example.\n\\acr{qmd} allow to easily write technical content. \\acr{qmd} use \\acr{yaml}\nfor the metadata.\n\nQuarto documents (qmd) allow to easily write technical content. qmd use YAML Ain’t Markup Language (YAML) for the metadata."
  },
  {
    "objectID": "getting_started.html#complete-example",
    "href": "getting_started.html#complete-example",
    "title": "Introduction to acronyms",
    "section": "Complete example",
    "text": "Complete example\nA complete example showing the previous instructions as a single file can be found here."
  },
  {
    "objectID": "getting_started.html#next-steps",
    "href": "getting_started.html#next-steps",
    "title": "Introduction to acronyms",
    "section": "Next steps",
    "text": "Next steps\nThe current vignette gives you the tools for a simple document, using the (sane) defaults provided by acronyms. However, most of the mechanisms are highly configurable and offer various options.\nAn advanced usage is covered in Advanced Usage, while the available options are described in Options.\nStyles lists the different styles that can be used, along with a small example to visualize each of them."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "acronyms",
    "section": "",
    "text": "Author: rchaput rchaput.pro@gmail.com\n\n  \n\n\nThis Quarto extension adds the ability to automatically handle acronyms inside Quarto (qmd) documents.\nThroughout the document, acronyms are replaced by either their short name, or their long name, depending on whether they appear for the first time. They also may be linked to their corresponding definition in an automatically generated List of Acronyms, so that readers can access the definition in one click.\nIt is based on the previous Acronymsdown package, which provided the same features, but for RMarkdown documents.\n\n\n\n\nTired of manually having to check whether the first occurrence of an acronym is correctly explained to your readers? acronyms automatically replaces acronyms, based on whether they appear for the first time.\nGenerate a List of Acronyms based on your defined acronyms.\n\nThe place where this list will be generated can be specified (by default, at the beginning of the document).\n\nAutomatic sorting of this list.\n\nYou can choose between the alphabetical, usage or initial order.\n\nEasily manage acronyms\n\nChoose between multiple styles to replace acronyms.\nBy default, 1st occurrence is replaced by long name (short name), and following occurrences are simply replaced by short name.\nAll occurrences can also be linked to the acronym’s definition in the List of Acronyms.\n\nDefine acronyms directly in your document or in external files.\nExtensive configuration\n\nMost of this package’s mechanisms can be configured: how to handle duplicate keys, whether to raise an error, print a warning or ignore an non-existing key, how to sort, …\nSane defaults are included, such that this package can be used out-of-the-box.\n\n\n\n\n\nIn a terminal, in the same directory as your Quarto document (or project), enter the following command:\nquarto add rchaput/acronyms\nThis will automatically install the latest version from GitHub into your _extensions/ folder. Then, in your Quarto document (or project configuration), add the following lines to your YAML metadata:\n---\nfilters:\n  - acronyms\n---\nIf you already have a filters: block, simply add the - acronyms line at the end of the list.\n\n\n\nUsing this package requires 2 simple steps:\n\nDefine your acronyms in the YAML metadata.\n\n---\nacronyms:\n  keys:\n    - shortname: qmd\n      longname: Quarto documents\n    - shortname: YAML\n      longname: YAML Ain't Markup Language\n---\n\nUse your acronyms in your qmd document with the \\acr{<KEY>} special command!\n\n\\acr{qmd} can be used to write technical content. \\acr{qmd} use \\acr{YAML}.\nwhich renders as (using default options):\n\nQuarto documents can be used to write technical content. qmd use YAML Ain’t Markup Language.\n\n\n\n\nThis package was inspired from:\n\nan issue on bookdown ;\na lua filter to sort a definition list ;\nthe pagedown’s insertion of a List of Figures/Tables ;\nthe pandoc-abbreviations filter ;\nthe LaTeX glossaries package."
  }
]